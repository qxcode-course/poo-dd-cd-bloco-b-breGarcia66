{
    "patches": [
        {
            "label": "2025-10-16_14-30-55",
            "content": "@@ -165,16 +165,21 @@\n eturn f'\n+msg: \n status: \n@@ -216,16 +216,16 @@\n ado'%7D';%0A\n-\n %0A    # m\n@@ -525,32 +525,37 @@\n          print('\n+msg: \n notebook ligado'\n@@ -690,16 +690,21 @@\n  print('\n+msg: \n notebook\n@@ -777,320 +777,56 @@\n     \n-if self.getLigado() == False:%0A            print('erro: ligue o notebook primeiro');%0A            return;%0A%0A        print(f'usando notebook por %7Btime%7D minutos');%0A%0A%0A# Main%0A%0Anotebook: Notebook = Notebook();%0Aprint(notebook);%0Anotebook.usar(10);%0A%0Anotebook.ligar();%0Aprint(notebook);%0Anotebook.usar(10);%0A%0Anotebook.desligar(\n+print(f'msg: usando notebook por %7Btime%7D minutos'\n );%0A%0A\n",
            "lines": "37"
        },
        {
            "label": "2025-10-16_14-36-35",
            "content": "@@ -100,55 +100,8 @@\n lse;\n-%0A        self.__bateria: Bateria %7C None = None;\n %0A%0A  \n@@ -165,21 +165,16 @@\n eturn f'\n-msg: \n status: \n@@ -186,32 +186,20 @@\n ado' if \n-self.getLigado()\n+True\n  else 'd\n@@ -303,159 +303,8 @@\n o;%0A%0A\n-    def getCargaBateria(self) -%3E int:%0A        if self.__bateria is None:%0A            return 0;%0A        %0A        return self.__bateria.getCarga();%0A    %0A\n     \n@@ -396,91 +396,8 @@\n ue%0A%0A\n-    def setBateria(self, bateria: Bateria):%0A        self.__bateria = bateria;%0A    %0A\n     \n@@ -457,33 +457,28 @@\n elf.\n-__bateria.getCarga\n+getLigado\n () == \n-0\n+False\n :%0A  \n@@ -491,99 +491,83 @@\n     \n-print('msg: nao foi possivel ligar');%0A            return;%0A    %0A        self.setLigado(True)\n+self.setLigado(True);%0A            print('notebook ligado');%0A%0A        return\n ;%0A%0A \n@@ -680,21 +680,16 @@\n  print('\n-msg: \n notebook\n@@ -695,20 +695,36 @@\n k de\n-s\n ligad\n-o\n+i\n ');%0A%0A\n+        return;%0A%0A\n     \n@@ -875,156 +875,16 @@\n     \n-if time %3E self.__bateria.getCarga():%0A            print(f'msg: usando por %7Bself.getBateria()%7D minutos, notebook descarregou')%0A%0A%0A        print(f'msg: \n+print(f'\n usan\n@@ -922,711 +922,119 @@\n );%0A%0A\n+%0A\n # \n-Criando classe Bateria%0Aclass Bateria:%0A    def __init__(self, capacidade: int):%0A        self.__carga: int = capacidade;%0A        self.__capacidade: int = capacidade;%0A%0A    # M%C3%A9todos de acesso%0A    def getCarga(self) -%3E int:%0A        return self.__carga;%0A%0A    def getCapacidade(self) -%3E int:%0A        return self.__capacidade;%0A    %0A    # M%C3%A9todos de muta%C3%A7%C3%B5es%0A    def setCarga(self, value):%0A        self.__carga += value;  %0A        if self.getCarga() %3E self.getCapacidade():%0A            self.__carga = self.getCapacidade();%0A%0A    def setCapacidade(self, value):%0A        if value %3E 0:%0A            self.__capacidade = value;%0A            return;%0A%0A        print('capacidade de bateria inv%C3%A1lida');%0A%0A%0A# Main%0A%0A\n+Main%0A%0Anotebook: Notebook = Notebook();%0Aprint(notebook);%0Anotebook.usar(10);%0A%0Anotebook.ligar();%0Aprint(\n notebook\n : No\n@@ -1033,47 +1033,49 @@\n book\n-: N\n+);%0An\n otebook\n- = Notebook();%0Aprint(notebook\n+.usar(10);%0A%0Anotebook.desligar(\n );%0A%0A\n",
            "lines": "54"
        },
        {
            "label": "2025-10-18_01-02-09",
            "content": "# Criando classe Notebook\n\nclass Notebook:\n    def __init__(self):\n        self.__ligado: bool = False;\n        self.__bateria: Bateria | None = None;\n\n    # m\u00e9todo string\n    def __str__(self) -> str:\n        return f'msg: status: {'ligado' if self.getLigado() else 'desligado'}';\n\n    # m\u00e9todo de acesso\n    def getLigado(self) -> bool:\n        return self.__ligado;\n\n    def getCargaBateria(self) -> int:\n        if self.__bateria is None:\n            return 0;\n        \n        return self.__bateria.getCarga();\n    \n    # m\u00e9todo de muta\u00e7\u00e3o\n    def setLigado(self, value: bool):\n        self.__ligado = value\n\n    def setBateria(self, bateria: Bateria):\n        self.__bateria = bateria;\n    \n    # m\u00e9todos do objeto\n    def ligar(self):\n        if self.__bateria.getCarga() == 0:\n            print('msg: nao foi possivel ligar');\n            return;\n    \n        self.setLigado(True);\n\n    def desligar(self):\n        if self.getLigado() == True:\n            self.setLigado(False);\n            print('msg: notebook desligado');\n\n    def usar(self, time: int):\n        if self.getLigado() == False:\n            print('erro: ligue o notebook primeiro');\n            return;\n\n        if time > self.__bateria.getCarga():\n            print(f'msg: usando por {self.getBateria()} minutos, notebook descarregou')\n\n\n        print(f'msg: usando notebook por {time} minutos');\n\n# Criando classe Bateria\nclass Bateria:\n    def __init__(self, capacidade: int):\n        self.__carga: int = capacidade;\n        self.__capacidade: int = capacidade;\n\n    # M\u00e9todos de acesso\n    def getCarga(self) -> int:\n        return self.__carga;\n\n    def getCapacidade(self) -> int:\n        return self.__capacidade;\n    \n    # M\u00e9todos de muta\u00e7\u00f5es\n    def setCarga(self, value):\n        self.__carga += value;  \n        if self.getCarga() > self.getCapacidade():\n            self.__carga = self.getCapacidade();\n\n    def setCapacidade(self, value):\n        if value > 0:\n            self.__capacidade = value;\n            return;\n\n        print('capacidade de bateria inv\u00e1lida');\n\n\n# Main\n\nnotebook: Notebook = Notebook();\nprint(notebook);\n\n\n",
            "lines": "85"
        }
    ]
}